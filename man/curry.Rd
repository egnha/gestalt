% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curry.R
\name{curry}
\alias{curry}
\alias{is_curried}
\alias{uncurry}
\title{Curry a function}
\usage{
curry(f)

is_curried(x)

uncurry(f)
}
\arguments{
\item{f}{Function.}

\item{x}{Object to test.}
}
\value{
Curried function.

\code{is_curried(x)} is \code{TRUE} when \code{x} is a curried function, and
\code{FALSE}, otherwise.
}
\description{
\code{curry()} \href{https://en.wikipedia.org/wiki/Currying}{curries} functions—it
reconstitutes a function as a succession of single-argument functions. For
example, \code{curry()} produces the function\preformatted{function(x) {
  function(y) {
    function(z) {
      x * y * z
    }
  }
}
}

from the function \code{function(x, y, z) x * y * z}.

\code{fn_curry()} produces a curried function from an \code{\link[=fn]{fn()}}-style function
declaration, which supports \link[rlang:quasiquotation]{quasiquotation} of a
function’s body and (default) argument values.
}
\details{
Dots (\code{...}) are treated as a unit when currying. For example,
\code{curry()} transforms \code{function(x, ...) list(x, ...)} to
\code{function(x) { function(...) list(x, ...) }}.
}
\examples{
curry(function(x, y, z = 0) x + y + z)
double <- curry(`*`)(2)
double(3)  # 6

}
\seealso{
\code{\link[=fn_curry]{fn_curry()}}, \code{\link[=partial]{partial()}}
}
