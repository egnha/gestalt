% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curry.R
\name{curry}
\alias{curry}
\alias{is_curried}
\alias{uncurry}
\title{Curry a function}
\usage{
curry(f)

is_curried(x)

uncurry(f)
}
\arguments{
\item{f}{Function.}

\item{x}{Object to test.}
}
\value{
\code{curry()} returns a curried function.

\code{is_curried(x)} is \code{TRUE} when \code{x} is a curried function, and
\code{FALSE}, otherwise.
}
\description{
\code{curry()} \href{https://en.wikipedia.org/wiki/Currying}{curries} functions in a
manner congenial to Râ€™s calling convention.
}
\examples{
f <- function(x, y, ..., z = 3) c(x, y, z, ...)
fc <- curry(f)

stopifnot(
  identical(
    formals(fc(1)),
    formals(function(y, ..., z = 3) {})
  ),
  identical(
    formals(fc(1, a = 1)),
    formals(function(y, ..., z = 3) {})
  ),
  identical(
    formals(fc(y = 2, z = 4)),
    formals(function(x, ...) {})
  ),
  identical(fc(1)(2),        c(1, 2, 3)),
  identical(fc(y = 2)(1),    c(1, 2, 3)),
  identical(fc(1, 2),        c(1, 2, 3)),
  identical(fc(2, x = 1),    c(1, 2, 3)),
  identical(fc(1, 2, a = 1), c(1, 2, 3, a = 1)),
  identical(fc(1, a = 1)(2), c(1, 2, 3, a = 1)),
  identical(fc(1)(a = 1)(2), c(1, 2, 3, a = 1))
)

stopifnot(
  !is_curried(f),
  !is_curried(uncurry(fc)),
  is_curried(fc),
  is_curried(fc(1)),
  is_curried(function() NULL),
  is_curried(function(x) NULL),
  is_curried(function(...) NULL),
  is_curried(function(x = 1, y = 2) NULL)
)

double <- curry(`*`)(2)
stopifnot(double(3) == 6)

}
\seealso{
\code{\link[=fn_curry]{fn_curry()}}, \code{\link[=partial]{partial()}}
}
