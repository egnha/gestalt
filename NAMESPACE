# Generated by roxygen2: do not edit by hand

S3method("$",CompositeFunction)
S3method("$<-",CompositeFunction)
S3method("[",CompositeFunction)
S3method("[<-",CompositeFunction)
S3method("[[",CompositeFunction)
S3method("[[<-",CompositeFunction)
S3method("names<-",CompositeFunction)
S3method(as.list,CompositeFunction)
S3method(departial,"function")
S3method(departial,CompositeFunction)
S3method(departial,PartialFunction)
S3method(departial,default)
S3method(fn_interp,"NULL")
S3method(fn_interp,"function")
S3method(fn_interp,CompositeFunction)
S3method(fn_interp,default)
S3method(fn_interp,list)
S3method(fn_interp,quosure)
S3method(fn_interp,quosures)
S3method(head,CompositeFunction)
S3method(length,CompositeFunction)
S3method(names,CompositeFunction)
S3method(names,Context)
S3method(partial,"function")
S3method(partial,CompositeFunction)
S3method(partial,PartialFunction)
S3method(partial,default)
S3method(print,CompositeFunction)
S3method(print,ConstantFunction)
S3method(print,Context)
S3method(print,PartialFunction)
S3method(print,Posure)
S3method(tail,CompositeFunction)
S3method(unlist,CompositeFunction)
export("%>>>%")
export(compose)
export(constant)
export(departial)
export(fn)
export(fn_)
export(let)
export(partial)
export(posure)
export(run)
export(variable)
import(rlang)
importFrom(utils,capture.output)
importFrom(utils,head)
importFrom(utils,tail)
